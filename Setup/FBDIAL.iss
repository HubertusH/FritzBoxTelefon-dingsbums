; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "Fritz!Box Telefon-dingsbums"
#define MyAppVersion "3.4.0"
#define MyAppPublisher "Kruemelino"
#define MyAppURL "http://sourceforge.net/projects/fbdb/"
#define MyAppDescription "Das Fritz!Box Telefon-dingsbums ist ein Outlook-Addin, welches ein direktes Wählen der Kontakte aus dem Computer ermöglicht. Zusätzlich bietet es nützliche Funktionen, wie einen Anrufmonitor oder Rückwärtssuche."

[Code]
var Versionspfad:String;
var Version:String;

[Code]
function IsDotNetDetected(version: string; service: cardinal): boolean;
// Indicates whether the specified version and service pack of the .NET Framework is installed.
//
// version -- Specify one of these strings for the required .NET Framework version:
//    'v1.1.4322'     .NET Framework 1.1
//    'v2.0.50727'    .NET Framework 2.0
//    'v3.0'          .NET Framework 3.0
//    'v3.5'          .NET Framework 3.5
//    'v4\Client'     .NET Framework 4.0 Client Profile
//    'v4\Full'       .NET Framework 4.0 Full Installation
//    'v4.5'          .NET Framework 4.5
//
// service -- Specify any non-negative integer for the required service pack level:
//    0               No service packs required
//    1, 2, etc.      Service pack 1, 2, etc. required
var
    key: string;
    install, release, serviceCount: cardinal;
    check45, success: boolean;
begin
    // .NET 4.5 installs as update to .NET 4.0 Full
    if version = 'v4.5' then begin
        version := 'v4\Full';
        check45 := true;
    end else
        check45 := false;

    // installation key group for all .NET versions
    key := 'SOFTWARE\Microsoft\NET Framework Setup\NDP\' + version;

    // .NET 3.0 uses value InstallSuccess in subkey Setup
    if Pos('v3.0', version) = 1 then begin
        success := RegQueryDWordValue(HKLM, key + '\Setup', 'InstallSuccess', install);
    end else begin
        success := RegQueryDWordValue(HKLM, key, 'Install', install);
    end;

    // .NET 4.0/4.5 uses value Servicing instead of SP
    if Pos('v4', version) = 1 then begin
        success := success and RegQueryDWordValue(HKLM, key, 'Servicing', serviceCount);
    end else begin
        success := success and RegQueryDWordValue(HKLM, key, 'SP', serviceCount);
    end;

    // .NET 4.5 uses additional value Release
    if check45 then begin
        success := success and RegQueryDWordValue(HKLM, key, 'Release', release);
        success := success and (release >= 378389);
    end;

    result := success and (install = 1) and (serviceCount >= service);
end;

function GetOutlookVersion(): String;
  var Versionsnr,n :Integer;
  begin
  Versionsnr := 0;
  if RegQueryStringValue(HKLM,'SOFTWARE\Microsoft\Windows\CurrentVersion\App Paths\OUTLOOK.EXE','', Versionspfad) then
    begin
    GetVersionNumbersString(Versionspfad,Version);
    n:= Pos('.',Version)-1;
    Versionsnr := StrToInt(Copy(Version,0,n));
    CASE Versionsnr OF
    11: Version := '2003';
    12: Version := '2007';
    14: Version := '2010';
    15: Version := '2013';
    END; // CASE

    result:= Version;
    // Prüfen welche Version vorliegt
  end;
end;

function OutlookVersion (Get:Integer): boolean;
  begin
    if StrToInt(Version) = Get then
    begin
      Result := true
      exit
    end
    else result:= false;
end;

function Outlookx64: boolean;
  var x86: String;
  begin
    if RegQueryStringValue(HKLM,'SOFTWARE\Microsoft\Office\14.0\Outlook','Bitness', x86) then
    begin
      if x86 = 'x64' then
      begin    
        Result := true
        exit
      end
    end
    else result:= false;
end;

function CaspolPath(dummy: String): String;
var
  Pfad, strNET, key: String;
begin
    strNET := 'v2.0.50727';
    
    if IsDotNetDetected(strNet, 0) then
    begin
      key := 'SOFTWARE\Microsoft\.NETFramework'
      
      if RegQueryStringValue(HKLM, key, 'InstallRoot', Pfad) then
      begin
        Pfad := Pfad + strNET + '\CasPol.exe'
        //MsgBox(Pfad, mbInformation, MB_OK);
        
        if FileExists(Pfad) then
        begin
          Result := Pfad
          exit
        end
        else
        begin
          MsgBox('Die Datei CasPol.exe wurde nicht gefunden.', mbError, MB_OK);
          result := 'false'
        end 
      end
      else
      begin
        MsgBox('Der Registryeintrag InstallRoot wurde nicht gefunden.', mbError, MB_OK);
        result := 'false'
      end
    end
    else
    begin
      MsgBox('.NET v2.0.50727 wurde nicht gefunden.', mbError, MB_OK);
      result := 'false'
    end
end;

function VSTOInstallerPath(dummy: String): String;
var
  Pfad, key: String;
begin
    if IsWin64 then	
    begin
		  key := 'SOFTWARE\Wow6432Node\Microsoft\VSTO Runtime Setup\v4'
    end
    else
			key := 'SOFTWARE\Microsoft\VSTO Runtime Setup\v4'
    begin
    end
		
    if RegQueryStringValue(HKLM, key, 'InstallerPath', Pfad) then
      begin
      
				if FileExists(Pfad) then
        begin
          Result := Pfad
          exit
        end
        else
        begin
          MsgBox('Die Datei VSTOInstaller.exe wurde nicht gefunden.', mbError, MB_OK);
          result := 'false' 
        end 
      end
    else
			begin
        MsgBox('Der Registryeintrag InstallerPath wurde nicht gefunden.', mbError, MB_OK);
        result := 'false'
    end
		
end;

// Map version to the real Microsoft Office PIA Key
function GetMappedOfficePIAKey(version : String) : String;
var
    tmpInt:Integer;
begin
    tmpInt:= StrToInt(Version);
    CASE tmpInt OF
    2003:
    begin
      result := '9040941900063D11C8EF10054038389C'
    end
    2007:
    begin
      result := '00002105501100000000000000F01FEC'
    end
    2010:
    begin
      result := '00004109501100000000000000F01FEC'
    end
    2013:
    begin
      result := 'dummy'
    end

    END;
end;

// Function to check if a specified Office PIA is installed
// version: '2003', '2007' or '2010'
function IsOfficePIAInstalled(version : String) : Boolean;
var
    mapped  : String;
begin
    mapped := GetMappedOfficePIAKey(version);
    if (mapped = 'dummy') then begin
        result := false;
    end else begin
        result := RegKeyExists(HKLM, 'SOFTWARE\Classes\Installer\Features\' + mapped);
    end;
end;

[Code]
function IsRegularUser(): Boolean;
  begin
  Result := not (IsAdminLoggedOn or IsPowerUserLoggedOn);
end;

function DefDirRoot(Param: String): String;
  begin
  if IsRegularUser then
    Result := ExpandConstant('{localappdata}')
  else
  Result := ExpandConstant('{pf}')
end;

function InitializeSetup(): Boolean;
  var
    strNET, strNET2:String;
    tmpInt:Integer;
    VSTORFeature:Cardinal;
  begin
    MsgBox(ExpandConstant('{username}'), mbError, MB_OK);
    Version:= GetOutlookVersion;
    tmpInt:= StrToInt(Version);
    result := true;
    CASE tmpInt OF
      2003: 
      begin 
        strNET := 'v3.5';
        strNET2 := '.NET Framework 3.5';
        
        //MsgBox(CaspolPath(''), mbInformation, MB_OK);
        if CaspolPath('') = 'false' then
        begin
          Result := false
          exit
        end
        // Prüfe auf VSTO 2005 SE
        if RegQueryDWordValue(HKLM,'SOFTWARE\Microsoft\VSTO Runtime Setup\v2.0.50727','Install', VSTORFeature) then
        begin 
          if VSTORFeature = 0 then
          begin    
            Result := false
            exit
          end 
        end 

      end; 
      2007, 2010, 2013: 
      begin 
        strNET := 'v4\Client';
        strNET2 := '.NET Framework 4.0 Client Profile';
        // Prüfe auf VSTO 4.0
        if Outlookx64 then 
        begin 
          if RegQueryDWordValue(HKLM,'SOFTWARE\Wow6432Node\Microsoft\VSTO Runtime Setup\v4R','VSTORFeature_CLR40', VSTORFeature) then
          begin 
            if VSTORFeature = 0 then
            begin    
              Result := false
              exit
            end 
          end 
        end
        else
        begin 
          if RegQueryDWordValue(HKLM,'SOFTWARE\Microsoft\VSTO Runtime Setup','VSTORFeature_CLR40\v4R', VSTORFeature) then
          begin
            if VSTORFeature = 0 then
            begin    
              Result := false
              exit
            end 
          end 
        end     
      
        if not Result then 
        begin 
          MsgBox('{#MyAppName} benötigt die Visual Studio 2010-Tools für Office (VSTO 2010) .'#13#13
          'Bitte Installieren Sie es über Windows Update.,'#13
          'Danach können Sie das Installationsprogramm neu starten.', mbError, MB_OK);
        end 
      end; 
    END; 
    
    if not IsDotNetDetected(strNet, 0) then 
    begin
      MsgBox('{#MyAppName} benötigt Microsoft ' + strNET2 + ' .'#13#13
      'Bitte Installieren Sie es über Windows Update.,'#13
      'Danach können Sie das Installationsprogramm neu starten.', mbError, MB_OK);
      result := false;
    end

//   if not IsOfficePIAInstalled(Version) then 
//    begin
//      MsgBox('{#MyAppName} benötigt Primary Interop Assemblies für Office ' + strNet + ' .'#13#13
//      'Bitte Installieren Sie es über Windows Update.,'#13
//      'Danach können Sie das Installationsprogramm neu starten.', mbError, MB_OK);
//      result := false;
//    end
end;




[Setup]
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{7BEF5A7A-282A-4915-8557-5816183FB56C}}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName={code:DefDirRoot}\{#MyAppName}
DefaultGroupName={#MyAppName}
DisableProgramGroupPage=yes
OutputBaseFilename=FBDB
Compression=lzma
SolidCompression=yes
PrivilegesRequired=none

[Languages]
Name: "german"; MessagesFile: "compiler:Languages\German.isl"

[Registry]
;Office 2003
Root: HKCU; Subkey: "Software\Microsoft\Office\Outlook\Addins\FritzBoxDial"; Flags: uninsdeletekey; ValueType: dword; ValueName: "CommandLineSafe"; ValueData: "1"; Check: OutlookVersion(2003)
Root: HKCU; Subkey: "Software\Microsoft\Office\Outlook\Addins\FritzBoxDial"; Flags: uninsdeletekey; ValueType: string; ValueName: "Description"; ValueData: "{#MyAppDescription}"; Check: OutlookVersion(2003)
Root: HKCU; Subkey: "Software\Microsoft\Office\Outlook\Addins\FritzBoxDial"; Flags: uninsdeletekey; ValueType: string; ValueName: "FriendlyName"; ValueData: "{#MyAppName}"; Check: OutlookVersion(2003)
Root: HKCU; Subkey: "Software\Microsoft\Office\Outlook\Addins\FritzBoxDial"; Flags: uninsdeletekey; ValueType: dword; ValueName: "LoadBehavior"; ValueData: "3"; Check: OutlookVersion(2003)
Root: HKCU; Subkey: "Software\Microsoft\Office\Outlook\Addins\FritzBoxDial"; Flags: uninsdeletekey; ValueType: string; ValueName: "Manifest"; ValueData: "file:///{app}/FritzBoxDial.dll.manifest"; Check: OutlookVersion(2003)
;Office 2007
Root: HKCU; Subkey: "Software\Microsoft\Office\Outlook\Addins\FBDB.FritzBoxDial"; Flags: uninsdeletekey; ValueType: string; ValueName: "Description"; ValueData: "{#MyAppDescription}"; Check: OutlookVersion(2007)
Root: HKCU; Subkey: "Software\Microsoft\Office\Outlook\Addins\FBDB.FritzBoxDial"; Flags: uninsdeletekey; ValueType: string; ValueName: "FriendlyName"; ValueData: "{#MyAppName}"; Check: OutlookVersion(2007)
Root: HKCU; Subkey: "Software\Microsoft\Office\Outlook\Addins\FBDB.FritzBoxDial"; Flags: uninsdeletekey; ValueType: dword; ValueName: "LoadBehavior"; ValueData: "3"; Check: OutlookVersion(2007)
Root: HKCU; Subkey: "Software\Microsoft\Office\Outlook\Addins\FBDB.FritzBoxDial"; Flags: uninsdeletekey; ValueType: string; ValueName: "Manifest"; ValueData: "file:///{app}/Fritz!Box Telefon-Dingsbums.vsto|vstolocal"; Check: OutlookVersion(2007)
;Office 2010 & 2013 x64
Root: HKCU64; Subkey: "Software\Microsoft\Office\Outlook\Addins\Fritz!Box Telefon-Dingsbums"; Flags: uninsdeletekey; ValueType: string; ValueName: "Description"; ValueData: "{#MyAppDescription}"; Check: "Outlookx64 and (OutlookVersion(2010) or OutlookVersion(2013))"
Root: HKCU64; Subkey: "Software\Microsoft\Office\Outlook\Addins\Fritz!Box Telefon-Dingsbums"; Flags: uninsdeletekey; ValueType: string; ValueName: "FriendlyName"; ValueData: "{#MyAppName}"; Check: "Outlookx64 and (OutlookVersion(2010) or OutlookVersion(2013))"
Root: HKCU64; Subkey: "Software\Microsoft\Office\Outlook\Addins\Fritz!Box Telefon-Dingsbums"; Flags: uninsdeletekey; ValueType: dword; ValueName: "LoadBehavior"; ValueData: "3"; Check: "Outlookx64 and (OutlookVersion(2010) or OutlookVersion(2013))"
Root: HKCU64; Subkey: "Software\Microsoft\Office\Outlook\Addins\Fritz!Box Telefon-Dingsbums"; Flags: uninsdeletekey; ValueType: string; ValueName: "Manifest"; ValueData: "file:///{app}/Fritz!Box Telefon-Dingsbums.vsto|vstolocal"; Check: "Outlookx64 and (OutlookVersion(2010) or OutlookVersion(2013))"
;Office 2010 & 2013 x32
Root: HKCU32; Subkey: "Software\Microsoft\Office\Outlook\Addins\Fritz!Box Telefon-Dingsbums"; Flags: uninsdeletekey; ValueType: string; ValueName: "Description"; ValueData: "{#MyAppDescription}"; Check: "not Outlookx64 and (OutlookVersion(2010) or OutlookVersion(2013))"
Root: HKCU32; Subkey: "Software\Microsoft\Office\Outlook\Addins\Fritz!Box Telefon-Dingsbums"; Flags: uninsdeletekey; ValueType: string; ValueName: "FriendlyName"; ValueData: "{#MyAppName}"; Check: "not Outlookx64 and (OutlookVersion(2010) or OutlookVersion(2013))"
Root: HKCU32; Subkey: "Software\Microsoft\Office\Outlook\Addins\Fritz!Box Telefon-Dingsbums"; Flags: uninsdeletekey; ValueType: dword; ValueName: "LoadBehavior"; ValueData: "3"; Check: "not Outlookx64 and (OutlookVersion(2010) or OutlookVersion(2013))"
Root: HKCU32; Subkey: "Software\Microsoft\Office\Outlook\Addins\Fritz!Box Telefon-Dingsbums"; Flags: uninsdeletekey; ValueType: string; ValueName: "Manifest"; ValueData: "file:///{app}/Fritz!Box Telefon-Dingsbums.vsto|vstolocal"; Check: "not Outlookx64 and (OutlookVersion(2010) or OutlookVersion(2013))"

[Files]
;Office 2003
Source: "2003\FritzBoxDial.dll"; DestDir: "{app}"; Flags: ignoreversion; Check: OutlookVersion(2003)
Source: "2003\FritzBoxDial.dll.manifest"; DestDir: "{app}"; Flags: ignoreversion; Check: OutlookVersion(2003)
Source: "2003\Funktionen.dll"; DestDir: "{app}"; Flags: ignoreversion; Check: OutlookVersion(2003)
Source: "2003\PopupNotifier.dll"; DestDir: "{app}"; Flags: ignoreversion; Check: OutlookVersion(2003)
Source: "2003\Stoppuhr.dll"; DestDir: "{app}"; Flags: ignoreversion; Check: OutlookVersion(2003)
Source: "2003\setcaspol.exe"; DestDir: "{app}"; Flags: ignoreversion; Check: OutlookVersion(2003)
;Office 2007
Source: "2007\Fritz!Box Telefon-Dingsbums.dll"; DestDir: "{app}"; Flags: ignoreversion; Check: OutlookVersion(2007)
Source: "2007\Fritz!Box Telefon-Dingsbums.dll.manifest"; DestDir: "{app}"; Flags: ignoreversion; Check: OutlookVersion(2007)
Source: "2007\Fritz!Box Telefon-Dingsbums.vsto"; DestDir: "{app}"; Flags: ignoreversion; Check: OutlookVersion(2007)
Source: "2007\Funktionen.dll"; DestDir: "{app}"; Flags: ignoreversion; Check: OutlookVersion(2007)
Source: "2007\PopupNotifier.dll"; DestDir: "{app}"; Flags: ignoreversion; Check: OutlookVersion(2007)
Source: "2007\Stoppuhr.dll"; DestDir: "{app}"; Flags: ignoreversion; Check: OutlookVersion(2007)
;Office 2010
Source: "2010\Fritz!Box Telefon-Dingsbums.dll"; DestDir: "{app}"; Flags: ignoreversion; Check: OutlookVersion(2010)
Source: "2010\Fritz!Box Telefon-Dingsbums.dll.manifest"; DestDir: "{app}"; Flags: ignoreversion; Check: OutlookVersion(2010)
Source: "2010\Fritz!Box Telefon-Dingsbums.vsto"; DestDir: "{app}"; Flags: ignoreversion; Check: OutlookVersion(2010)
Source: "2010\Funktionen.dll"; DestDir: "{app}"; Flags: ignoreversion; Check: OutlookVersion(2010)
Source: "2010\PopupNotifier.dll"; DestDir: "{app}"; Flags: ignoreversion; Check: OutlookVersion(2010)
Source: "2010\Stoppuhr.dll"; DestDir: "{app}"; Flags: ignoreversion; Check: OutlookVersion(2010)
;Office 2013
Source: "2013\Fritz!Box Telefon-Dingsbums.dll"; DestDir: "{app}"; Flags: ignoreversion; Check: OutlookVersion(2013)
Source: "2013\Fritz!Box Telefon-Dingsbums.dll.manifest"; DestDir: "{app}"; Flags: ignoreversion; Check: OutlookVersion(2013)
Source: "2013\Fritz!Box Telefon-Dingsbums.vsto"; DestDir: "{app}"; Flags: ignoreversion; Check: OutlookVersion(2013)
Source: "2013\Funktionen.dll"; DestDir: "{app}"; Flags: ignoreversion; Check: OutlookVersion(2013)
Source: "2013\PopupNotifier.dll"; DestDir: "{app}"; Flags: ignoreversion; Check: OutlookVersion(2013)
Source: "2013\Stoppuhr.dll"; DestDir: "{app}"; Flags: ignoreversion; Check: OutlookVersion(2013)
;not Office 2003
Source: "Common\Microsoft.Office.Tools.Common.v4.0.Utilities.dll"; DestDir: "{app}"; Flags: ignoreversion; Check: (not OutlookVersion(2003))
Source: "Common\Microsoft.Office.Tools.Outlook.v4.0.Utilities.dll"; DestDir: "{app}"; Flags: ignoreversion; Check: (not OutlookVersion(2003))

[Run]
;Office 2003

Filename: {code:CaspolPath}; Parameters: "-pp off"; WorkingDir: {app}; Flags: runhidden; Check: OutlookVersion(2003)
Filename: {code:CaspolPath}; Parameters: "-machine -addgroup 1 -strong -file {app}\FritzBoxDial.dll -noname -noversion  FullTrust -n ""FritzBoxDial"" -description ""FritzBoxDial mit FullTrust"""; WorkingDir: {app}; Flags: runhidden ; Check: OutlookVersion(2003)
Filename: {code:CaspolPath}; Parameters: "-machine -addgroup 1 -strong -file {app}\PopupNotifier.dll -noname -noversion  FullTrust -n ""FritzBoxDial"" -description ""FritzBoxDial(PopupNotifier.dll) mit FullTrust"""; WorkingDir: {app}; Flags: runhidden; Check: OutlookVersion(2003)
Filename: {code:CaspolPath}; Parameters: "-machine -addgroup 1 -strong -file {app}\StoppUhr.dll -noname -noversion  FullTrust -n ""FritzBoxDial"" -description ""FritzBoxDial(StoppUhr.dll) mit FullTrust"""; WorkingDir: {app}; Flags: runhidden; Check: OutlookVersion(2003)
Filename: {code:CaspolPath}; Parameters: "-machine -addgroup 1 -strong -file {app}\Funktionen.dll -noname -noversion  FullTrust -n ""FritzBoxDial"" -description ""FritzBoxDial(Funktionen.dll) mit FullTrust"""; WorkingDir: {app}; Flags: runhidden; Check: OutlookVersion(2003)
Filename: {code:CaspolPath}; Parameters: "-pp on"; WorkingDir: {app}; Flags: runhidden; Check: OutlookVersion(2003)
;Office 2007
Filename: {code:VSTOInstallerPath}; Parameters: "/i ""{app}\Fritz!Box Telefon-Dingsbums.vsto"" /s "; WorkingDir: {app} ; Check: OutlookVersion(2007) 

[UninstallRun]
;Office 2003
Filename: {code:CaspolPath}; Parameters: "-pp off"; WorkingDir: {app}; Flags: runhidden; Check: OutlookVersion(2003)
Filename: {code:CaspolPath}; Parameters: "-rg ""FritzBoxDial"""; WorkingDir: {app}; Flags: runhidden; Check: OutlookVersion(2003)
Filename: {code:CaspolPath}; Parameters: "-pp on"; WorkingDir: {app} Flags: runhidden; Check: OutlookVersion(2003) 
;Office 2007
Filename: {code:VSTOInstallerPath}; Parameters: "/u ""{app}\Fritz!Box Telefon-Dingsbums.vsto"" /s"; WorkingDir: {app};  Check: OutlookVersion(2007)

[Icons]
Name: "{group}\{cm:ProgramOnTheWeb,{#MyAppName}}"; Filename: "{#MyAppURL}"
Name: "{group}\{cm:UninstallProgram,{#MyAppName}}"; Filename: "{uninstallexe}"
; EOF